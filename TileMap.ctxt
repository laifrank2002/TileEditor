#BlueJ class context
comment0.target=TileMap
comment0.text=\r\n\ A\ representation\ of\ a\ map.\ \r\n\ Sort\ of\ like\ a\ bitmap,\ but\ for\ tiles\ instead\ of\ colours.\r\n\ A\ bitmap\ of\ bitmaps,\ if\ you\ will.\r\n\ Inspired\ by\ Tilepaper's\ Wandering.\r\n\ \r\n\ The\ way\ it\ works\:\r\n\ A\ column\ of\ rows.\ \r\n\ ||||\r\n\ ||||\r\n\ ||||\r\n\ \r\n\ @author\ Frank\ Lai\r\n\ @version\ 2018-08-15\r\n
comment1.params=width\ height
comment1.target=TileMap(int,\ int)
comment1.text=\r\n\ A\ default\ map\r\n\ @param\ width\ the\ width\ of\ the\ map\r\n\ @param\ height\ the\ height\ of\ the\ map\r\n
comment10.params=
comment10.target=void\ addColumn()
comment10.text=\r\n\ Adds\ a\ column\r\n
comment11.params=columns
comment11.target=void\ addColumn(int)
comment11.text=\r\n\ Adds\ a\ specified\ number\ of\ columns\r\n\ @param\ columns\ the\ specified\ number\ of\ columns\r\n
comment12.params=
comment12.target=void\ addRow()
comment12.text=\r\n\ Adds\ a\ row\r\n
comment13.params=rows
comment13.target=void\ addRow(int)
comment13.text=\r\n\ Adds\ a\ specified\ number\ of\ rows\r\n\ @param\ rows\ the\ specified\ number\ of\ rows\r\n
comment14.params=
comment14.target=void\ removeColumn()
comment14.text=\r\n\ Removes\ the\ last\ column\r\n
comment15.params=columns
comment15.target=void\ removeColumn(int)
comment15.text=\r\n\ Removes\ a\ specified\ number\ of\ columns\ from\ the\ end\r\n\ @param\ columns\ the\ specified\ number\ of\ columns\r\n
comment16.params=
comment16.target=void\ removeRow()
comment16.text=\r\n\ Removes\ the\ last\ row\r\n
comment17.params=rows
comment17.target=void\ removeRow(int)
comment17.text=\r\n\ Removes\ a\ specified\ number\ of\ rows\ from\ the\ end\r\n\ @param\ rows\ the\ specified\ number\ of\ rows\r\n
comment2.params=x\ y
comment2.target=int\ getIndex(int,\ int)
comment2.text=\r\n\ Converts\ from\ x\ and\ y\ to\ an\ index\ inside\ the\ map\r\n\ @param\ x\ the\ x\ index\ (column)\r\n\ @param\ y\ the\ y\ index\ (row)\r\n\ \r\n\ @return\ the\ index\ of\ the\ map\r\n\ -1\ if\ out\ of\ bounds\r\n
comment3.params=index
comment3.target=java.lang.String\ getTile(int)
comment3.text=\r\n\ Gets\ the\ tile\ at\ the\ specified\ index\r\n\ \r\n\ @param\ index\ the\ index\r\n\ @return\ the\ tile\r\n
comment4.params=x\ y
comment4.target=java.lang.String\ getTile(int,\ int)
comment4.text=\r\n\ Gets\ the\ tile\ at\ the\ specified\ x\ and\ y\ indices\r\n\ @param\ x\ the\ x\ index\ (column)\r\n\ @param\ y\ the\ y\ index\ (row)\r\n\ \r\n\ @return\ the\ tile\r\n
comment5.params=index\ tile
comment5.target=void\ setTile(int,\ java.lang.String)
comment5.text=\r\n\ Sets\ a\ tile\ using\ index\r\n\ @param\ index\ the\ index\ of\ the\ set\ tile\r\n\ @param\ tile\ the\ new\ value\ for\ the\ set\ tile\r\n
comment6.params=x\ y\ tile
comment6.target=void\ setTile(int,\ int,\ java.lang.String)
comment6.text=\r\n\ Sets\ a\ tile\ using\ x\ and\ y\ coordinates\r\n\ @param\ the\ x\ coordinate\ of\ the\ set\ tile\r\n\ @param\ the\ y\ coordinate\ of\ the\ set\ tile\r\n\ @param\ tile\ the\ new\ value\ for\ the\ set\ tile\r\n
comment7.params=string
comment7.target=void\ importMap(java.lang.String)
comment7.text=\r\n\ Loads\ a\ map\ from\ string\r\n\ @param\ string\ the\ string\ representation\ of\ the\ map\r\n
comment8.params=
comment8.target=java.lang.String\ exportMapToString()
comment8.text=\r\n\ Exports\ a\ map\ to\ string,\r\n\ Also\ known\ as\ "saving"\r\n
comment9.params=
comment9.target=java.lang.String\ toString()
comment9.text=\r\n\ Exports\ a\ map\ to\ a\ data\ readable\ format\r\n\ For\ debugging\ purposes.\r\n
numComments=18
